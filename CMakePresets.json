{
  "version": 2,
  "cmakeMinimumRequired": {
    "major": 3,
    "minor": 14,
    "patch": 0
  },
  "configurePresets": [
    {
      "name": "dev-mode",
      "hidden": true,
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Debug"
      }
    },
    {
      "name": "release-mode",
      "hidden": true,
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "RelWithDebInfo"
      }
    },
    {
      "name": "vcpkg",
      "hidden": true,
      "cacheVariables": {
        "CMAKE_TOOLCHAIN_FILE": "$env{VCPKG_ROOT}/scripts/buildsystems/vcpkg.cmake"
      }
    },
    {
      "name": "cppcheck",
      "hidden": true,
      "cacheVariables": {
        "CMAKE_CXX_CPPCHECK": "cppcheck;--inline-suppr"
      }
    },
    {
      "name": "clang-tidy",
      "hidden": true,
      "cacheVariables": {
        "CMAKE_CXX_CLANG_TIDY": "clang-tidy;--header-filter=^${sourceDir}/"
      }
    },
    {
      "name": "KiCad",
      "description": "This preset is var settings for KiCad",
      "hidden": true,
      "cacheVariables": {
        "wxBUILD_SAMPLES": "ALL",
        "wxUSE_GUI" : "ON"
      }
    },
    {
      "name": "ci-std",
      "description": "This preset makes sure the project actually builds with at least the specified standard",
      "hidden": true,
      "inherits": [
        "KiCad"
      ],
      "cacheVariables": {
        "CMAKE_CXX_EXTENSIONS": "OFF",
        "CMAKE_CXX_STANDARD": "17",
        "CMAKE_CXX_STANDARD_REQUIRED": "ON",
        "CMAKE_EXPORT_COMPILE_COMMANDS": "ON"
      }
    },
    {
      "name": "flags-gcc-clang",
      "description": "These flags are supported by both GCC and Clang",
      "hidden": true,
      "cacheVariables": {
        "CMAKE_SHARED_LINKER_FLAGS": "-Wl,--allow-shlib-undefined,--as-needed,-z,noexecstack,-z,relro,-z,now"
      }
    },
    {
      "name": "flags-appleclang",
      "hidden": true,
      "cacheVariables": {
        "CMAKE_CXX_FLAGS": "-fstack-protector-strong -fcf-protection=full -Wall -Wextra -Wpedantic -Wconversion -Wsign-conversion -Wcast-qual -Wformat=2 -Wundef -Werror=float-equal -Wshadow -Wcast-align -Wunused -Wnull-dereference -Wdouble-promotion -Wimplicit-fallthrough -Wextra-semi -Woverloaded-virtual -Wnon-virtual-dtor -Wold-style-cast"
      }
    },
    {
      "name": "flags-msvc",
      "description": "Note that all the flags after /W4 are required for MSVC to conform to the language standard",
      "hidden": true,
      "cacheVariables": {
        "CMAKE_EXE_LINKER_FLAGS": "-Wno-dev"
      }
    },
    {
      "name": "ci-linux",
      "generator": "Ninja",
      "hidden": true,
      "inherits": [
        "flags-gcc-clang",
        "ci-std"
      ]
    },
    {
      "name": "ci-darwin",
      "generator": "Ninja",
      "hidden": true,
      "inherits": [
        "flags-appleclang",
        "ci-std"
      ]
    },
    {
      "name": "ci-win64",
      "inherits": [
        "flags-msvc",
        "ci-std"
      ],
      "generator": "Ninja",
      "hidden": true,
      "cacheVariables": {
        "KICAD_WIN32_DPI_AWARE": "ON"
      }
    },
    {
      "name": "coverage-linux",
      "binaryDir": "${sourceDir}/build/coverage",
      "inherits": "ci-linux",
      "hidden": true,
      "cacheVariables": {
        "ENABLE_COVERAGE": "ON",
        "CMAKE_BUILD_TYPE": "Coverage",
        "CMAKE_EXE_LINKER_FLAGS_COVERAGE": "--coverage",
        "CMAKE_SHARED_LINKER_FLAGS_COVERAGE": "--coverage",
        "CMAKE_MAP_IMPORTED_CONFIG_COVERAGE": "Coverage;RelWithDebInfo;Release;Debug;"
      }
    },
    {
      "name": "ci-coverage",
      "inherits": [
        "coverage-linux",
        "dev-mode",
        "vcpkg"
      ],
      "cacheVariables": {
        "COVERAGE_HTML_COMMAND": ""
      }
    },
    {
      "name": "ci-sanitize",
      "binaryDir": "${sourceDir}/build/sanitize",
      "inherits": [
        "ci-linux",
        "dev-mode",
        "vcpkg"
      ],
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Sanitize",
        "CMAKE_MAP_IMPORTED_CONFIG_SANITIZE": "Sanitize;RelWithDebInfo;Release;Debug;"
      }
    },
    {
      "name": "ci-build",
      "binaryDir": "${sourceDir}/build",
      "hidden": true
    },
    {
      "name": "ci-macos",
      "inherits": [
        "ci-build",
        "ci-darwin",
        "dev-mode",
        "vcpkg"
      ]
    },
    {
      "name": "ci-ubuntu",
      "inherits": [
        "ci-build",
        "ci-linux",
        "clang-tidy",
        "cppcheck",
        "dev-mode"
      ]
    },
    {
      "name": "ci-windows",
      "inherits": [
        "ci-build",
        "ci-win64",
        "dev-mode"
      ]
    },
    {
      "name": "ci-windows-release",
      "inherits": [
        "ci-build",
        "ci-win64",
        "release-mode"
      ]
    }
  ]
}
